///////////////////////////////////////////////////
//Служебная часть
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-ADD
Перем Ванесса;

&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;

&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-ADD.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;

	ВсеТесты = Новый Массив;
	
	// описание шагов
	// пример вызова Ванесса.ДобавитьШагВМассивТестов(ВсеТесты, Снипет, ИмяПроцедуры, ПредставлениеТеста, ОписаниеШага, ТипШагаДляОписания, ТипШагаВДереве);
	
	ОписаниеШага = "Загружает данные из файла Конвертации данных 2."
		+ " Как и в соседних шага, макет может располагаться в каталоге проекта и можно указать путь относительно каталога проекта. Можно не указывать расширение xml."
		+ " Пример - 'fixtures\Печатные формы\Договоры контрагентов\Выгрузка по договору ЦЗЯЛТ103192'";
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты, 
		"ЯЗагружаюМакетКомпоновкиДанных(Парам01,Парам02)", 
		"ЯЗагружаюМакетКомпоновкиДанных", 
		"И я загружаю макет Компоновки данных 2 ""fixtures\ИмяФайлаМакета""", 
		ОписаниеШага, 
		"Данные.Макеты");
	
	Возврат ВсеТесты;
КонецФункции

///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////


///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//И     я загружаю макет Компоновки данных 2 "Макеты\ИмяФайлаМакета"
//@ЯЗагружаюМакетКомпоновкиДанных2(Парам01)
Процедура ЯЗагружаюМакетКомпоновкиДанных(ВерсияКонвертации, Знач ИмяМакета) Экспорт
	
	ЕдинственнаяРеализованнаяВерсияКД = 2;
	Если ВерсияКонвертации <> ЕдинственнаяРеализованнаяВерсияКД Тогда
		Выражение = СтрШаблон("Реализована загрузка только из файлов КД%1", ЕдинственнаяРеализованнаяВерсияКД);
		ВызватьИсключение Выражение;
	КонецЕсли;
	
	//Если Ванесса.Объект.ИспользоватьПрямыеПутиФайлов Тогда
	//	// можно прям с клиента
	//	
	//Иначе
	//	// Надо передать файл на сервер
	//	
	//КонецЕсли;
		
	
	Если Не СтрЗаканчиваетсяНа(ИмяМакета, ".xml") Тогда
		ИмяМакета = ИмяМакета + ".xml";
	КонецЕсли;
	ПолноеИмяФайла = Ванесса.Объект.КаталогПроекта + "\" + ИмяМакета;
	
	// Передаем макет на сервер для загрузки обработкой
	АдресВременногоХранилища = "";
	ПоместитьФайл(АдресВременногоХранилища, ПолноеИмяФайла, , Ложь, ЭтаФорма.УникальныйИдентификатор);
	
	ЗагрузитьФайлНаСервере(АдресВременногоХранилища);
	
	//КонвертацияДанных2 = Ванесса.Плагин("КонвертацияДанных2");
	//ДвоичныеДанные = Новый ДвоичныеДанные(ИмяФайла);
	//
	//Макет = ПолучитьФайлНаСервере(ДвоичныеДанные);
	//
	////Обработка КонвертацияОбъектовИнформационныхБаз
	//КонвертацияДанных2.ЗагрузитьИзФайла(ПолноеИмяФайла);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗагрузитьФайлНаСервере(АдресВременногоХранилища)
	
	Файл = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	ПолноеИмяФайла = ПолучитьИмяВременногоФайла("xml");
	Файл.Записать(ПолноеИмяФайла);
	
	ОбработкаОбъект = Обработки.КонвертацияОбъектовИнформационныхБаз.Создать();
	ОбработкаОбъект.ИмяФайлаОбмена = ПолноеИмяФайла;
	ОбработкаОбъект.Тест_ИспользоватьБезОбмена = Истина;
	ОбработкаОбъект.РежимОбмена = "Загрузка";
	Попытка
		ОбработкаОбъект.ВыполнитьЗагрузкуДанных();
	Исключение
		УдалитьФайлы(ПолноеИмяФайла);
		ВызватьИсключение;
	КонецПопытки;
	
	УдалитьФайлы(ПолноеИмяФайла);
	
КонецПроцедуры
